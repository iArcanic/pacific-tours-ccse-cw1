on:
  push:
    branches:
    - main

env:
  DOTNET_CORE_VERSION: 7.0.x
  CONTAINER_APP_NAME: pacific-tours-container-app
  CONTAINER_APP_ENVIRONMENT_NAME: pacific-tours-env
  RESOURCE_GROUP: pacific-tours-env-resource-group
  CONTAINER_REGISTRY_NAME: PacificToursRegistry
  CONTAINER_REGISTRY_LOGIN_SERVER: pacifictoursregistry.azurecr.io
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  StaticApplicationSecurityTesting:
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore asp-net-core-web-app-authentication-authorisation.sln

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/dotnet@master
      continue-on-error: true
      with:
        args: --sarif-file-output=snyk.sarif

    - name: Upload result to GitHub code scanning
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: snyk.sarif
        category: snyk-sast-analysis

  BuildAndDeployPacificToursContainerApp:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Azure login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Container App deploy
      uses: azure/container-apps-deploy-action@v1
      with:
        appSourcePath: ${{ github.workspace }}
        acrName: ${{ env.CONTAINER_REGISTRY_NAME }}
        acrUsername: ${{ secrets.PacificToursRegistry_USERNAME_4718 }}
        acrPassword: ${{ secrets.PacificToursRegistry_PASSWORD_4718 }}
        imageToBuild: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/${{ env.CONTAINER_APP_NAME }}:${{ github.sha }}
        containerAppName: ${{ env.CONTAINER_APP_NAME }}
        containerAppEnvironment: ${{ env.CONTAINER_APP_ENVIRONMENT_NAME }}
        resourceGroup: ${{ env.RESOURCE_GROUP }}

  DatabaseMigration:
    runs-on: ubuntu-latest
    needs: BuildAndDeployPacificToursContainerApp
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Install EF Core tools
      run: dotnet tool install --global dotnet-ef

    - name: Run Database Migrations
      run: |
        dotnet ef database update --connection "${{ secrets.SQL_DATABASE_CONNECTION_STRING }}"
      working-directory: Migrations

    - name: Execute SQL scripts
      run: |
        for file in Scripts/*.sql; do
         echo "Executing $file..."
         docker run -e 'ACCEPT_EULA=Y' -e 'MSSQL_CLI_TELEMETRY_OPTOUT=true' -e 'MSSQL_PID=Developer' -v $(pwd):/scripts mcr.microsoft.com/mssql-tools sqlcmd -S ${{ secrets.SQL_SERVER }}.database.windows.net -d ${{ secrets.SQL_DATABASE }} -G -i "$file"
         echo "Execution of $file completed."
        done
      working-directory: ${{ github.workspace }}

  DynamicApplicationSecurityTesting:
    runs-on: ubuntu-latest
    needs: [BuildAndDeployPacificToursContainerApp, DatabaseMigration]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Get Deployed App URL
      id: get-app-url
      run: |
        APP_URL=$(az containerapp show --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --env ${{ env.CONTAINER_APP_ENVIRONMENT_NAME }} --query properties.configuration.ingress.fqdn -o tsv)
        echo "::set-output name=app-url::$APP_URL"

    - name: Run OWASP ZAP Baseline Scan
      uses: zaproxy/actions-full-scan@v0.10.0
      with:
        target: "https://${{ steps.get-app-url.outputs.app-url }}"

    - name: Upload OWASP ZAP Report
      uses: actions/upload-artifact@v3
      with:
        name: zap-report
        path: |
          /zap/wrk/baseline.html
          .zap/logs
